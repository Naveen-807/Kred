/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  EntropyEventsV2,
  EntropyEventsV2Interface,
} from "../../../@pythnetwork/entropy-sdk-solidity/EntropyEventsV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "oldDefaultGasLimit",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newDefaultGasLimit",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "ProviderDefaultGasLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldFeeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newFeeManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "ProviderFeeManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "oldFee",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "newFee",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "ProviderFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "oldMaxNumHashes",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "newMaxNumHashes",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "ProviderMaxNumHashesAdvanced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldUri",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newUri",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "ProviderUriUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userContribution",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "Requested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "randomNumber",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userContribution",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "providerContribution",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "callbackFailed",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callbackReturnValue",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "callbackGasUsed",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "Revealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "withdrawnAmount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "extraArgs",
        type: "bytes",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
] as const;

export class EntropyEventsV2__factory {
  static readonly abi = _abi;
  static createInterface(): EntropyEventsV2Interface {
    return new Interface(_abi) as EntropyEventsV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EntropyEventsV2 {
    return new Contract(address, _abi, runner) as unknown as EntropyEventsV2;
  }
}
