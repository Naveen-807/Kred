/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace EntropyStructs {
  export type ProviderInfoStruct = {
    feeInWei: BigNumberish;
    accruedFeesInWei: BigNumberish;
    originalCommitment: BytesLike;
    originalCommitmentSequenceNumber: BigNumberish;
    commitmentMetadata: BytesLike;
    uri: BytesLike;
    endSequenceNumber: BigNumberish;
    sequenceNumber: BigNumberish;
    currentCommitment: BytesLike;
    currentCommitmentSequenceNumber: BigNumberish;
    feeManager: AddressLike;
    maxNumHashes: BigNumberish;
  };

  export type ProviderInfoStructOutput = [
    feeInWei: bigint,
    accruedFeesInWei: bigint,
    originalCommitment: string,
    originalCommitmentSequenceNumber: bigint,
    commitmentMetadata: string,
    uri: string,
    endSequenceNumber: bigint,
    sequenceNumber: bigint,
    currentCommitment: string,
    currentCommitmentSequenceNumber: bigint,
    feeManager: string,
    maxNumHashes: bigint
  ] & {
    feeInWei: bigint;
    accruedFeesInWei: bigint;
    originalCommitment: string;
    originalCommitmentSequenceNumber: bigint;
    commitmentMetadata: string;
    uri: string;
    endSequenceNumber: bigint;
    sequenceNumber: bigint;
    currentCommitment: string;
    currentCommitmentSequenceNumber: bigint;
    feeManager: string;
    maxNumHashes: bigint;
  };

  export type RequestStruct = {
    provider: AddressLike;
    sequenceNumber: BigNumberish;
    numHashes: BigNumberish;
    commitment: BytesLike;
    blockNumber: BigNumberish;
    requester: AddressLike;
    useBlockhash: boolean;
    isRequestWithCallback: boolean;
  };

  export type RequestStructOutput = [
    provider: string,
    sequenceNumber: bigint,
    numHashes: bigint,
    commitment: string,
    blockNumber: bigint,
    requester: string,
    useBlockhash: boolean,
    isRequestWithCallback: boolean
  ] & {
    provider: string;
    sequenceNumber: bigint;
    numHashes: bigint;
    commitment: string;
    blockNumber: bigint;
    requester: string;
    useBlockhash: boolean;
    isRequestWithCallback: boolean;
  };
}

export declare namespace EntropyStructsV2 {
  export type ProviderInfoStruct = {
    feeInWei: BigNumberish;
    accruedFeesInWei: BigNumberish;
    originalCommitment: BytesLike;
    originalCommitmentSequenceNumber: BigNumberish;
    commitmentMetadata: BytesLike;
    uri: BytesLike;
    endSequenceNumber: BigNumberish;
    sequenceNumber: BigNumberish;
    currentCommitment: BytesLike;
    currentCommitmentSequenceNumber: BigNumberish;
    feeManager: AddressLike;
    maxNumHashes: BigNumberish;
    defaultGasLimit: BigNumberish;
  };

  export type ProviderInfoStructOutput = [
    feeInWei: bigint,
    accruedFeesInWei: bigint,
    originalCommitment: string,
    originalCommitmentSequenceNumber: bigint,
    commitmentMetadata: string,
    uri: string,
    endSequenceNumber: bigint,
    sequenceNumber: bigint,
    currentCommitment: string,
    currentCommitmentSequenceNumber: bigint,
    feeManager: string,
    maxNumHashes: bigint,
    defaultGasLimit: bigint
  ] & {
    feeInWei: bigint;
    accruedFeesInWei: bigint;
    originalCommitment: string;
    originalCommitmentSequenceNumber: bigint;
    commitmentMetadata: string;
    uri: string;
    endSequenceNumber: bigint;
    sequenceNumber: bigint;
    currentCommitment: string;
    currentCommitmentSequenceNumber: bigint;
    feeManager: string;
    maxNumHashes: bigint;
    defaultGasLimit: bigint;
  };

  export type RequestStruct = {
    provider: AddressLike;
    sequenceNumber: BigNumberish;
    numHashes: BigNumberish;
    commitment: BytesLike;
    blockNumber: BigNumberish;
    requester: AddressLike;
    useBlockhash: boolean;
    callbackStatus: BigNumberish;
    gasLimit10k: BigNumberish;
  };

  export type RequestStructOutput = [
    provider: string,
    sequenceNumber: bigint,
    numHashes: bigint,
    commitment: string,
    blockNumber: bigint,
    requester: string,
    useBlockhash: boolean,
    callbackStatus: bigint,
    gasLimit10k: bigint
  ] & {
    provider: string;
    sequenceNumber: bigint;
    numHashes: bigint;
    commitment: string;
    blockNumber: bigint;
    requester: string;
    useBlockhash: boolean;
    callbackStatus: bigint;
    gasLimit10k: bigint;
  };
}

export interface IEntropyInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "advanceProviderCommitment"
      | "combineRandomValues"
      | "constructUserCommitment"
      | "getAccruedPythFees"
      | "getDefaultProvider"
      | "getFee"
      | "getFeeV2(address,uint32)"
      | "getFeeV2()"
      | "getFeeV2(uint32)"
      | "getProviderInfo"
      | "getProviderInfoV2"
      | "getRequest"
      | "getRequestV2"
      | "register"
      | "request"
      | "requestV2(uint32)"
      | "requestV2(address,uint32)"
      | "requestV2()"
      | "requestV2(address,bytes32,uint32)"
      | "requestWithCallback"
      | "reveal"
      | "revealWithCallback"
      | "setDefaultGasLimit"
      | "setFeeManager"
      | "setMaxNumHashes"
      | "setProviderFee"
      | "setProviderFeeAsFeeManager"
      | "setProviderUri"
      | "withdraw"
      | "withdrawAsFeeManager"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "CallbackFailed"
      | "ProviderDefaultGasLimitUpdated(address,uint32,uint32)"
      | "ProviderDefaultGasLimitUpdated(address,uint32,uint32,bytes)"
      | "ProviderFeeManagerUpdated(address,address,address)"
      | "ProviderFeeManagerUpdated(address,address,address,bytes)"
      | "ProviderFeeUpdated(address,uint128,uint128)"
      | "ProviderFeeUpdated(address,uint128,uint128,bytes)"
      | "ProviderMaxNumHashesAdvanced(address,uint32,uint32)"
      | "ProviderMaxNumHashesAdvanced(address,uint32,uint32,bytes)"
      | "ProviderUriUpdated(address,bytes,bytes)"
      | "ProviderUriUpdated(address,bytes,bytes,bytes)"
      | "Registered(tuple)"
      | "Registered(address,bytes)"
      | "Requested(tuple)"
      | "Requested(address,address,uint64,bytes32,uint32,bytes)"
      | "RequestedWithCallback"
      | "Revealed(tuple,bytes32,bytes32,bytes32,bytes32)"
      | "Revealed(address,address,uint64,bytes32,bytes32,bytes32,bool,bytes,uint32,bytes)"
      | "RevealedWithCallback"
      | "Withdrawal(address,address,uint128)"
      | "Withdrawal(address,address,uint128,bytes)"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "advanceProviderCommitment",
    values: [AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "combineRandomValues",
    values: [BytesLike, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "constructUserCommitment",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAccruedPythFees",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDefaultProvider",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getFee", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "getFeeV2(address,uint32)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFeeV2()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFeeV2(uint32)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getProviderInfo",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getProviderInfoV2",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRequest",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRequestV2",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "register",
    values: [BigNumberish, BytesLike, BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "request",
    values: [AddressLike, BytesLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "requestV2(uint32)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "requestV2(address,uint32)",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "requestV2()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "requestV2(address,bytes32,uint32)",
    values: [AddressLike, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "requestWithCallback",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "reveal",
    values: [AddressLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revealWithCallback",
    values: [AddressLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setDefaultGasLimit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeManager",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxNumHashes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProviderFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProviderFeeAsFeeManager",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProviderUri",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawAsFeeManager",
    values: [AddressLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "advanceProviderCommitment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "combineRandomValues",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "constructUserCommitment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAccruedPythFees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDefaultProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFeeV2(address,uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFeeV2()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFeeV2(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProviderInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProviderInfoV2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getRequest", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRequestV2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "register", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "request", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "requestV2(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestV2(address,uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestV2()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestV2(address,bytes32,uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestWithCallback",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reveal", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revealWithCallback",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setDefaultGasLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxNumHashes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProviderFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProviderFeeAsFeeManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProviderUri",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawAsFeeManager",
    data: BytesLike
  ): Result;
}

export namespace CallbackFailedEvent {
  export type InputTuple = [
    provider: AddressLike,
    requestor: AddressLike,
    sequenceNumber: BigNumberish,
    userRandomNumber: BytesLike,
    providerRevelation: BytesLike,
    randomNumber: BytesLike,
    errorCode: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    requestor: string,
    sequenceNumber: bigint,
    userRandomNumber: string,
    providerRevelation: string,
    randomNumber: string,
    errorCode: string
  ];
  export interface OutputObject {
    provider: string;
    requestor: string;
    sequenceNumber: bigint;
    userRandomNumber: string;
    providerRevelation: string;
    randomNumber: string;
    errorCode: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldDefaultGasLimit: BigNumberish,
    newDefaultGasLimit: BigNumberish
  ];
  export type OutputTuple = [
    provider: string,
    oldDefaultGasLimit: bigint,
    newDefaultGasLimit: bigint
  ];
  export interface OutputObject {
    provider: string;
    oldDefaultGasLimit: bigint;
    newDefaultGasLimit: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldDefaultGasLimit: BigNumberish,
    newDefaultGasLimit: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    oldDefaultGasLimit: bigint,
    newDefaultGasLimit: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    oldDefaultGasLimit: bigint;
    newDefaultGasLimit: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderFeeManagerUpdated_address_address_address_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldFeeManager: AddressLike,
    newFeeManager: AddressLike
  ];
  export type OutputTuple = [
    provider: string,
    oldFeeManager: string,
    newFeeManager: string
  ];
  export interface OutputObject {
    provider: string;
    oldFeeManager: string;
    newFeeManager: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderFeeManagerUpdated_address_address_address_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldFeeManager: AddressLike,
    newFeeManager: AddressLike,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    oldFeeManager: string,
    newFeeManager: string,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    oldFeeManager: string;
    newFeeManager: string;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderFeeUpdated_address_uint128_uint128_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldFee: BigNumberish,
    newFee: BigNumberish
  ];
  export type OutputTuple = [provider: string, oldFee: bigint, newFee: bigint];
  export interface OutputObject {
    provider: string;
    oldFee: bigint;
    newFee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderFeeUpdated_address_uint128_uint128_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldFee: BigNumberish,
    newFee: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    oldFee: bigint,
    newFee: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    oldFee: bigint;
    newFee: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldMaxNumHashes: BigNumberish,
    newMaxNumHashes: BigNumberish
  ];
  export type OutputTuple = [
    provider: string,
    oldMaxNumHashes: bigint,
    newMaxNumHashes: bigint
  ];
  export interface OutputObject {
    provider: string;
    oldMaxNumHashes: bigint;
    newMaxNumHashes: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldMaxNumHashes: BigNumberish,
    newMaxNumHashes: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    oldMaxNumHashes: bigint,
    newMaxNumHashes: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    oldMaxNumHashes: bigint;
    newMaxNumHashes: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderUriUpdated_address_bytes_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldUri: BytesLike,
    newUri: BytesLike
  ];
  export type OutputTuple = [provider: string, oldUri: string, newUri: string];
  export interface OutputObject {
    provider: string;
    oldUri: string;
    newUri: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ProviderUriUpdated_address_bytes_bytes_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    oldUri: BytesLike,
    newUri: BytesLike,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    oldUri: string,
    newUri: string,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    oldUri: string;
    newUri: string;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Registered_tuple_Event {
  export type InputTuple = [provider: EntropyStructs.ProviderInfoStruct];
  export type OutputTuple = [provider: EntropyStructs.ProviderInfoStructOutput];
  export interface OutputObject {
    provider: EntropyStructs.ProviderInfoStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Registered_address_bytes_Event {
  export type InputTuple = [provider: AddressLike, extraArgs: BytesLike];
  export type OutputTuple = [provider: string, extraArgs: string];
  export interface OutputObject {
    provider: string;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Requested_tuple_Event {
  export type InputTuple = [request: EntropyStructs.RequestStruct];
  export type OutputTuple = [request: EntropyStructs.RequestStructOutput];
  export interface OutputObject {
    request: EntropyStructs.RequestStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Requested_address_address_uint64_bytes32_uint32_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    caller: AddressLike,
    sequenceNumber: BigNumberish,
    userContribution: BytesLike,
    gasLimit: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    caller: string,
    sequenceNumber: bigint,
    userContribution: string,
    gasLimit: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    caller: string;
    sequenceNumber: bigint;
    userContribution: string;
    gasLimit: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RequestedWithCallbackEvent {
  export type InputTuple = [
    provider: AddressLike,
    requestor: AddressLike,
    sequenceNumber: BigNumberish,
    userRandomNumber: BytesLike,
    request: EntropyStructs.RequestStruct
  ];
  export type OutputTuple = [
    provider: string,
    requestor: string,
    sequenceNumber: bigint,
    userRandomNumber: string,
    request: EntropyStructs.RequestStructOutput
  ];
  export interface OutputObject {
    provider: string;
    requestor: string;
    sequenceNumber: bigint;
    userRandomNumber: string;
    request: EntropyStructs.RequestStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event {
  export type InputTuple = [
    request: EntropyStructs.RequestStruct,
    userRevelation: BytesLike,
    providerRevelation: BytesLike,
    blockHash: BytesLike,
    randomNumber: BytesLike
  ];
  export type OutputTuple = [
    request: EntropyStructs.RequestStructOutput,
    userRevelation: string,
    providerRevelation: string,
    blockHash: string,
    randomNumber: string
  ];
  export interface OutputObject {
    request: EntropyStructs.RequestStructOutput;
    userRevelation: string;
    providerRevelation: string;
    blockHash: string;
    randomNumber: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    caller: AddressLike,
    sequenceNumber: BigNumberish,
    randomNumber: BytesLike,
    userContribution: BytesLike,
    providerContribution: BytesLike,
    callbackFailed: boolean,
    callbackReturnValue: BytesLike,
    callbackGasUsed: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    caller: string,
    sequenceNumber: bigint,
    randomNumber: string,
    userContribution: string,
    providerContribution: string,
    callbackFailed: boolean,
    callbackReturnValue: string,
    callbackGasUsed: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    caller: string;
    sequenceNumber: bigint;
    randomNumber: string;
    userContribution: string;
    providerContribution: string;
    callbackFailed: boolean;
    callbackReturnValue: string;
    callbackGasUsed: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RevealedWithCallbackEvent {
  export type InputTuple = [
    request: EntropyStructs.RequestStruct,
    userRandomNumber: BytesLike,
    providerRevelation: BytesLike,
    randomNumber: BytesLike
  ];
  export type OutputTuple = [
    request: EntropyStructs.RequestStructOutput,
    userRandomNumber: string,
    providerRevelation: string,
    randomNumber: string
  ];
  export interface OutputObject {
    request: EntropyStructs.RequestStructOutput;
    userRandomNumber: string;
    providerRevelation: string;
    randomNumber: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Withdrawal_address_address_uint128_Event {
  export type InputTuple = [
    provider: AddressLike,
    recipient: AddressLike,
    withdrawnAmount: BigNumberish
  ];
  export type OutputTuple = [
    provider: string,
    recipient: string,
    withdrawnAmount: bigint
  ];
  export interface OutputObject {
    provider: string;
    recipient: string;
    withdrawnAmount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace Withdrawal_address_address_uint128_bytes_Event {
  export type InputTuple = [
    provider: AddressLike,
    recipient: AddressLike,
    withdrawnAmount: BigNumberish,
    extraArgs: BytesLike
  ];
  export type OutputTuple = [
    provider: string,
    recipient: string,
    withdrawnAmount: bigint,
    extraArgs: string
  ];
  export interface OutputObject {
    provider: string;
    recipient: string;
    withdrawnAmount: bigint;
    extraArgs: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IEntropy extends BaseContract {
  connect(runner?: ContractRunner | null): IEntropy;
  waitForDeployment(): Promise<this>;

  interface: IEntropyInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  advanceProviderCommitment: TypedContractMethod<
    [
      provider: AddressLike,
      advancedSequenceNumber: BigNumberish,
      providerRevelation: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  combineRandomValues: TypedContractMethod<
    [
      userRandomness: BytesLike,
      providerRandomness: BytesLike,
      blockHash: BytesLike
    ],
    [string],
    "view"
  >;

  constructUserCommitment: TypedContractMethod<
    [userRandomness: BytesLike],
    [string],
    "view"
  >;

  getAccruedPythFees: TypedContractMethod<[], [bigint], "view">;

  getDefaultProvider: TypedContractMethod<[], [string], "view">;

  getFee: TypedContractMethod<[provider: AddressLike], [bigint], "view">;

  "getFeeV2(address,uint32)": TypedContractMethod<
    [provider: AddressLike, gasLimit: BigNumberish],
    [bigint],
    "view"
  >;

  "getFeeV2()": TypedContractMethod<[], [bigint], "view">;

  "getFeeV2(uint32)": TypedContractMethod<
    [gasLimit: BigNumberish],
    [bigint],
    "view"
  >;

  getProviderInfo: TypedContractMethod<
    [provider: AddressLike],
    [EntropyStructs.ProviderInfoStructOutput],
    "view"
  >;

  getProviderInfoV2: TypedContractMethod<
    [provider: AddressLike],
    [EntropyStructsV2.ProviderInfoStructOutput],
    "view"
  >;

  getRequest: TypedContractMethod<
    [provider: AddressLike, sequenceNumber: BigNumberish],
    [EntropyStructs.RequestStructOutput],
    "view"
  >;

  getRequestV2: TypedContractMethod<
    [provider: AddressLike, sequenceNumber: BigNumberish],
    [EntropyStructsV2.RequestStructOutput],
    "view"
  >;

  register: TypedContractMethod<
    [
      feeInWei: BigNumberish,
      commitment: BytesLike,
      commitmentMetadata: BytesLike,
      chainLength: BigNumberish,
      uri: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  request: TypedContractMethod<
    [provider: AddressLike, userCommitment: BytesLike, useBlockHash: boolean],
    [bigint],
    "payable"
  >;

  "requestV2(uint32)": TypedContractMethod<
    [gasLimit: BigNumberish],
    [bigint],
    "payable"
  >;

  "requestV2(address,uint32)": TypedContractMethod<
    [provider: AddressLike, gasLimit: BigNumberish],
    [bigint],
    "payable"
  >;

  "requestV2()": TypedContractMethod<[], [bigint], "payable">;

  "requestV2(address,bytes32,uint32)": TypedContractMethod<
    [
      provider: AddressLike,
      userRandomNumber: BytesLike,
      gasLimit: BigNumberish
    ],
    [bigint],
    "payable"
  >;

  requestWithCallback: TypedContractMethod<
    [provider: AddressLike, userRandomNumber: BytesLike],
    [bigint],
    "payable"
  >;

  reveal: TypedContractMethod<
    [
      provider: AddressLike,
      sequenceNumber: BigNumberish,
      userRevelation: BytesLike,
      providerRevelation: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  revealWithCallback: TypedContractMethod<
    [
      provider: AddressLike,
      sequenceNumber: BigNumberish,
      userRandomNumber: BytesLike,
      providerRevelation: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  setDefaultGasLimit: TypedContractMethod<
    [gasLimit: BigNumberish],
    [void],
    "nonpayable"
  >;

  setFeeManager: TypedContractMethod<
    [manager: AddressLike],
    [void],
    "nonpayable"
  >;

  setMaxNumHashes: TypedContractMethod<
    [maxNumHashes: BigNumberish],
    [void],
    "nonpayable"
  >;

  setProviderFee: TypedContractMethod<
    [newFeeInWei: BigNumberish],
    [void],
    "nonpayable"
  >;

  setProviderFeeAsFeeManager: TypedContractMethod<
    [provider: AddressLike, newFeeInWei: BigNumberish],
    [void],
    "nonpayable"
  >;

  setProviderUri: TypedContractMethod<
    [newUri: BytesLike],
    [void],
    "nonpayable"
  >;

  withdraw: TypedContractMethod<[amount: BigNumberish], [void], "nonpayable">;

  withdrawAsFeeManager: TypedContractMethod<
    [provider: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "advanceProviderCommitment"
  ): TypedContractMethod<
    [
      provider: AddressLike,
      advancedSequenceNumber: BigNumberish,
      providerRevelation: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "combineRandomValues"
  ): TypedContractMethod<
    [
      userRandomness: BytesLike,
      providerRandomness: BytesLike,
      blockHash: BytesLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "constructUserCommitment"
  ): TypedContractMethod<[userRandomness: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getAccruedPythFees"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getDefaultProvider"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getFee"
  ): TypedContractMethod<[provider: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getFeeV2(address,uint32)"
  ): TypedContractMethod<
    [provider: AddressLike, gasLimit: BigNumberish],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "getFeeV2()"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getFeeV2(uint32)"
  ): TypedContractMethod<[gasLimit: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getProviderInfo"
  ): TypedContractMethod<
    [provider: AddressLike],
    [EntropyStructs.ProviderInfoStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getProviderInfoV2"
  ): TypedContractMethod<
    [provider: AddressLike],
    [EntropyStructsV2.ProviderInfoStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRequest"
  ): TypedContractMethod<
    [provider: AddressLike, sequenceNumber: BigNumberish],
    [EntropyStructs.RequestStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRequestV2"
  ): TypedContractMethod<
    [provider: AddressLike, sequenceNumber: BigNumberish],
    [EntropyStructsV2.RequestStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "register"
  ): TypedContractMethod<
    [
      feeInWei: BigNumberish,
      commitment: BytesLike,
      commitmentMetadata: BytesLike,
      chainLength: BigNumberish,
      uri: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "request"
  ): TypedContractMethod<
    [provider: AddressLike, userCommitment: BytesLike, useBlockHash: boolean],
    [bigint],
    "payable"
  >;
  getFunction(
    nameOrSignature: "requestV2(uint32)"
  ): TypedContractMethod<[gasLimit: BigNumberish], [bigint], "payable">;
  getFunction(
    nameOrSignature: "requestV2(address,uint32)"
  ): TypedContractMethod<
    [provider: AddressLike, gasLimit: BigNumberish],
    [bigint],
    "payable"
  >;
  getFunction(
    nameOrSignature: "requestV2()"
  ): TypedContractMethod<[], [bigint], "payable">;
  getFunction(
    nameOrSignature: "requestV2(address,bytes32,uint32)"
  ): TypedContractMethod<
    [
      provider: AddressLike,
      userRandomNumber: BytesLike,
      gasLimit: BigNumberish
    ],
    [bigint],
    "payable"
  >;
  getFunction(
    nameOrSignature: "requestWithCallback"
  ): TypedContractMethod<
    [provider: AddressLike, userRandomNumber: BytesLike],
    [bigint],
    "payable"
  >;
  getFunction(
    nameOrSignature: "reveal"
  ): TypedContractMethod<
    [
      provider: AddressLike,
      sequenceNumber: BigNumberish,
      userRevelation: BytesLike,
      providerRevelation: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revealWithCallback"
  ): TypedContractMethod<
    [
      provider: AddressLike,
      sequenceNumber: BigNumberish,
      userRandomNumber: BytesLike,
      providerRevelation: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setDefaultGasLimit"
  ): TypedContractMethod<[gasLimit: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setFeeManager"
  ): TypedContractMethod<[manager: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setMaxNumHashes"
  ): TypedContractMethod<[maxNumHashes: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setProviderFee"
  ): TypedContractMethod<[newFeeInWei: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setProviderFeeAsFeeManager"
  ): TypedContractMethod<
    [provider: AddressLike, newFeeInWei: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setProviderUri"
  ): TypedContractMethod<[newUri: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "withdraw"
  ): TypedContractMethod<[amount: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "withdrawAsFeeManager"
  ): TypedContractMethod<
    [provider: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "CallbackFailed"
  ): TypedContractEvent<
    CallbackFailedEvent.InputTuple,
    CallbackFailedEvent.OutputTuple,
    CallbackFailedEvent.OutputObject
  >;
  getEvent(
    key: "ProviderDefaultGasLimitUpdated(address,uint32,uint32)"
  ): TypedContractEvent<
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.InputTuple,
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.OutputTuple,
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.OutputObject
  >;
  getEvent(
    key: "ProviderDefaultGasLimitUpdated(address,uint32,uint32,bytes)"
  ): TypedContractEvent<
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.InputTuple,
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.OutputTuple,
    ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.OutputObject
  >;
  getEvent(
    key: "ProviderFeeManagerUpdated(address,address,address)"
  ): TypedContractEvent<
    ProviderFeeManagerUpdated_address_address_address_Event.InputTuple,
    ProviderFeeManagerUpdated_address_address_address_Event.OutputTuple,
    ProviderFeeManagerUpdated_address_address_address_Event.OutputObject
  >;
  getEvent(
    key: "ProviderFeeManagerUpdated(address,address,address,bytes)"
  ): TypedContractEvent<
    ProviderFeeManagerUpdated_address_address_address_bytes_Event.InputTuple,
    ProviderFeeManagerUpdated_address_address_address_bytes_Event.OutputTuple,
    ProviderFeeManagerUpdated_address_address_address_bytes_Event.OutputObject
  >;
  getEvent(
    key: "ProviderFeeUpdated(address,uint128,uint128)"
  ): TypedContractEvent<
    ProviderFeeUpdated_address_uint128_uint128_Event.InputTuple,
    ProviderFeeUpdated_address_uint128_uint128_Event.OutputTuple,
    ProviderFeeUpdated_address_uint128_uint128_Event.OutputObject
  >;
  getEvent(
    key: "ProviderFeeUpdated(address,uint128,uint128,bytes)"
  ): TypedContractEvent<
    ProviderFeeUpdated_address_uint128_uint128_bytes_Event.InputTuple,
    ProviderFeeUpdated_address_uint128_uint128_bytes_Event.OutputTuple,
    ProviderFeeUpdated_address_uint128_uint128_bytes_Event.OutputObject
  >;
  getEvent(
    key: "ProviderMaxNumHashesAdvanced(address,uint32,uint32)"
  ): TypedContractEvent<
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.InputTuple,
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.OutputTuple,
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.OutputObject
  >;
  getEvent(
    key: "ProviderMaxNumHashesAdvanced(address,uint32,uint32,bytes)"
  ): TypedContractEvent<
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.InputTuple,
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.OutputTuple,
    ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.OutputObject
  >;
  getEvent(
    key: "ProviderUriUpdated(address,bytes,bytes)"
  ): TypedContractEvent<
    ProviderUriUpdated_address_bytes_bytes_Event.InputTuple,
    ProviderUriUpdated_address_bytes_bytes_Event.OutputTuple,
    ProviderUriUpdated_address_bytes_bytes_Event.OutputObject
  >;
  getEvent(
    key: "ProviderUriUpdated(address,bytes,bytes,bytes)"
  ): TypedContractEvent<
    ProviderUriUpdated_address_bytes_bytes_bytes_Event.InputTuple,
    ProviderUriUpdated_address_bytes_bytes_bytes_Event.OutputTuple,
    ProviderUriUpdated_address_bytes_bytes_bytes_Event.OutputObject
  >;
  getEvent(
    key: "Registered(tuple)"
  ): TypedContractEvent<
    Registered_tuple_Event.InputTuple,
    Registered_tuple_Event.OutputTuple,
    Registered_tuple_Event.OutputObject
  >;
  getEvent(
    key: "Registered(address,bytes)"
  ): TypedContractEvent<
    Registered_address_bytes_Event.InputTuple,
    Registered_address_bytes_Event.OutputTuple,
    Registered_address_bytes_Event.OutputObject
  >;
  getEvent(
    key: "Requested(tuple)"
  ): TypedContractEvent<
    Requested_tuple_Event.InputTuple,
    Requested_tuple_Event.OutputTuple,
    Requested_tuple_Event.OutputObject
  >;
  getEvent(
    key: "Requested(address,address,uint64,bytes32,uint32,bytes)"
  ): TypedContractEvent<
    Requested_address_address_uint64_bytes32_uint32_bytes_Event.InputTuple,
    Requested_address_address_uint64_bytes32_uint32_bytes_Event.OutputTuple,
    Requested_address_address_uint64_bytes32_uint32_bytes_Event.OutputObject
  >;
  getEvent(
    key: "RequestedWithCallback"
  ): TypedContractEvent<
    RequestedWithCallbackEvent.InputTuple,
    RequestedWithCallbackEvent.OutputTuple,
    RequestedWithCallbackEvent.OutputObject
  >;
  getEvent(
    key: "Revealed(tuple,bytes32,bytes32,bytes32,bytes32)"
  ): TypedContractEvent<
    Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.InputTuple,
    Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.OutputTuple,
    Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.OutputObject
  >;
  getEvent(
    key: "Revealed(address,address,uint64,bytes32,bytes32,bytes32,bool,bytes,uint32,bytes)"
  ): TypedContractEvent<
    Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.InputTuple,
    Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.OutputTuple,
    Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.OutputObject
  >;
  getEvent(
    key: "RevealedWithCallback"
  ): TypedContractEvent<
    RevealedWithCallbackEvent.InputTuple,
    RevealedWithCallbackEvent.OutputTuple,
    RevealedWithCallbackEvent.OutputObject
  >;
  getEvent(
    key: "Withdrawal(address,address,uint128)"
  ): TypedContractEvent<
    Withdrawal_address_address_uint128_Event.InputTuple,
    Withdrawal_address_address_uint128_Event.OutputTuple,
    Withdrawal_address_address_uint128_Event.OutputObject
  >;
  getEvent(
    key: "Withdrawal(address,address,uint128,bytes)"
  ): TypedContractEvent<
    Withdrawal_address_address_uint128_bytes_Event.InputTuple,
    Withdrawal_address_address_uint128_bytes_Event.OutputTuple,
    Withdrawal_address_address_uint128_bytes_Event.OutputObject
  >;

  filters: {
    "CallbackFailed(address,address,uint64,bytes32,bytes32,bytes32,bytes)": TypedContractEvent<
      CallbackFailedEvent.InputTuple,
      CallbackFailedEvent.OutputTuple,
      CallbackFailedEvent.OutputObject
    >;
    CallbackFailed: TypedContractEvent<
      CallbackFailedEvent.InputTuple,
      CallbackFailedEvent.OutputTuple,
      CallbackFailedEvent.OutputObject
    >;

    "ProviderDefaultGasLimitUpdated(address,uint32,uint32)": TypedContractEvent<
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.InputTuple,
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.OutputTuple,
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_Event.OutputObject
    >;
    "ProviderDefaultGasLimitUpdated(address,uint32,uint32,bytes)": TypedContractEvent<
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.InputTuple,
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.OutputTuple,
      ProviderDefaultGasLimitUpdated_address_uint32_uint32_bytes_Event.OutputObject
    >;
    "ProviderFeeManagerUpdated(address,address,address)": TypedContractEvent<
      ProviderFeeManagerUpdated_address_address_address_Event.InputTuple,
      ProviderFeeManagerUpdated_address_address_address_Event.OutputTuple,
      ProviderFeeManagerUpdated_address_address_address_Event.OutputObject
    >;
    "ProviderFeeManagerUpdated(address,address,address,bytes)": TypedContractEvent<
      ProviderFeeManagerUpdated_address_address_address_bytes_Event.InputTuple,
      ProviderFeeManagerUpdated_address_address_address_bytes_Event.OutputTuple,
      ProviderFeeManagerUpdated_address_address_address_bytes_Event.OutputObject
    >;
    "ProviderFeeUpdated(address,uint128,uint128)": TypedContractEvent<
      ProviderFeeUpdated_address_uint128_uint128_Event.InputTuple,
      ProviderFeeUpdated_address_uint128_uint128_Event.OutputTuple,
      ProviderFeeUpdated_address_uint128_uint128_Event.OutputObject
    >;
    "ProviderFeeUpdated(address,uint128,uint128,bytes)": TypedContractEvent<
      ProviderFeeUpdated_address_uint128_uint128_bytes_Event.InputTuple,
      ProviderFeeUpdated_address_uint128_uint128_bytes_Event.OutputTuple,
      ProviderFeeUpdated_address_uint128_uint128_bytes_Event.OutputObject
    >;
    "ProviderMaxNumHashesAdvanced(address,uint32,uint32)": TypedContractEvent<
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.InputTuple,
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.OutputTuple,
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_Event.OutputObject
    >;
    "ProviderMaxNumHashesAdvanced(address,uint32,uint32,bytes)": TypedContractEvent<
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.InputTuple,
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.OutputTuple,
      ProviderMaxNumHashesAdvanced_address_uint32_uint32_bytes_Event.OutputObject
    >;
    "ProviderUriUpdated(address,bytes,bytes)": TypedContractEvent<
      ProviderUriUpdated_address_bytes_bytes_Event.InputTuple,
      ProviderUriUpdated_address_bytes_bytes_Event.OutputTuple,
      ProviderUriUpdated_address_bytes_bytes_Event.OutputObject
    >;
    "ProviderUriUpdated(address,bytes,bytes,bytes)": TypedContractEvent<
      ProviderUriUpdated_address_bytes_bytes_bytes_Event.InputTuple,
      ProviderUriUpdated_address_bytes_bytes_bytes_Event.OutputTuple,
      ProviderUriUpdated_address_bytes_bytes_bytes_Event.OutputObject
    >;
    "Registered(tuple)": TypedContractEvent<
      Registered_tuple_Event.InputTuple,
      Registered_tuple_Event.OutputTuple,
      Registered_tuple_Event.OutputObject
    >;
    "Registered(address,bytes)": TypedContractEvent<
      Registered_address_bytes_Event.InputTuple,
      Registered_address_bytes_Event.OutputTuple,
      Registered_address_bytes_Event.OutputObject
    >;
    "Requested(tuple)": TypedContractEvent<
      Requested_tuple_Event.InputTuple,
      Requested_tuple_Event.OutputTuple,
      Requested_tuple_Event.OutputObject
    >;
    "Requested(address,address,uint64,bytes32,uint32,bytes)": TypedContractEvent<
      Requested_address_address_uint64_bytes32_uint32_bytes_Event.InputTuple,
      Requested_address_address_uint64_bytes32_uint32_bytes_Event.OutputTuple,
      Requested_address_address_uint64_bytes32_uint32_bytes_Event.OutputObject
    >;

    "RequestedWithCallback(address,address,uint64,bytes32,tuple)": TypedContractEvent<
      RequestedWithCallbackEvent.InputTuple,
      RequestedWithCallbackEvent.OutputTuple,
      RequestedWithCallbackEvent.OutputObject
    >;
    RequestedWithCallback: TypedContractEvent<
      RequestedWithCallbackEvent.InputTuple,
      RequestedWithCallbackEvent.OutputTuple,
      RequestedWithCallbackEvent.OutputObject
    >;

    "Revealed(tuple,bytes32,bytes32,bytes32,bytes32)": TypedContractEvent<
      Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.InputTuple,
      Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.OutputTuple,
      Revealed_tuple_bytes32_bytes32_bytes32_bytes32_Event.OutputObject
    >;
    "Revealed(address,address,uint64,bytes32,bytes32,bytes32,bool,bytes,uint32,bytes)": TypedContractEvent<
      Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.InputTuple,
      Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.OutputTuple,
      Revealed_address_address_uint64_bytes32_bytes32_bytes32_bool_bytes_uint32_bytes_Event.OutputObject
    >;

    "RevealedWithCallback(tuple,bytes32,bytes32,bytes32)": TypedContractEvent<
      RevealedWithCallbackEvent.InputTuple,
      RevealedWithCallbackEvent.OutputTuple,
      RevealedWithCallbackEvent.OutputObject
    >;
    RevealedWithCallback: TypedContractEvent<
      RevealedWithCallbackEvent.InputTuple,
      RevealedWithCallbackEvent.OutputTuple,
      RevealedWithCallbackEvent.OutputObject
    >;

    "Withdrawal(address,address,uint128)": TypedContractEvent<
      Withdrawal_address_address_uint128_Event.InputTuple,
      Withdrawal_address_address_uint128_Event.OutputTuple,
      Withdrawal_address_address_uint128_Event.OutputObject
    >;
    "Withdrawal(address,address,uint128,bytes)": TypedContractEvent<
      Withdrawal_address_address_uint128_bytes_Event.InputTuple,
      Withdrawal_address_address_uint128_bytes_Event.OutputTuple,
      Withdrawal_address_address_uint128_bytes_Event.OutputObject
    >;
  };
}
